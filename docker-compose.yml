version: '3.9'
services:
  postgres:
    container_name: order_psql_db
    image: postgres:14.3-alpine
    ports:
      - "5437:5432"
    environment:
      - POSTGRES_USER=server
      - POSTGRES_PASSWORD=server
      - POSTGRES_DB=order_db
    restart: always
    volumes:
      - ./pkg/repository/db/pgdata:/var/lib/postgresql/data
      - ./pkg/repository/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - l0_my-network

  redis:
    container_name: order_redis_db
    image: redis:7
    ports:
      - "6377:6379"
    restart: always
    volumes:
      - ./pkg/repository/redis/data:/data
    networks:
      - l0_my-network

  nats-streaming:
    container_name: nats-streaming
    image: nats-streaming:latest
    ports:
      - "4222:4222"
      - "8222:8222"
    environment:
      - NATS_STREAMING_CLUSTER_ID=test-cluster
      - NATS_STREAMING_STORE_TYPE=file
      - NATS_STREAMING_FILE_STORE_DIR=/data/stan/store
    volumes:
      - ./pkg/repository/nats/data:/data/stan/store
    restart: always
    networks:
      - l0_my-network

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - nats-streaming
    env_file: .env
    networks:
      - l0_my-network

networks:
  l0_my-network:
    driver: bridge
